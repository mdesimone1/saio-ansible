  - name: clean up /etc/swift directory
    file: path=/etc/swift state=absent

  - name: create clean /etc/swift
    command: cp -r {{ source_dir }}/swift/doc/saio/swift /etc/swift

  - name: copy the sample configuration files for running tests
    command: cp -r {{ source_dir }}/swift/test/sample.conf /etc/swift/test.conf

  - name: set correct ownership of /etc/swift
    file: path=/etc/swift owner={{ username }} group={{ group }} recurse=yes

  - name: find config files to modify user option
    raw: find /etc/swift/ -name \*.conf
    register: conf_files

  - name: replace user name
    replace: dest={{ item }} regexp=<your-user-name> replace={{ username }}
    with_items: conf_files.stdout_lines

  - name: copy the SAIO scripts for resetting the environment
    command: cp -r {{ source_dir }}/swift/doc/saio/bin /home/{{ username }}/bin creates=/home/{{ username }}/bin

  - name: set the correct file mode for SAIO scripts
    file: dest=/home/{{ username }}/bin mode=0777 recurse=yes

  - name: add new env. variable for loopback device
    lineinfile: dest=/home/{{ username }}/.bashrc line="export SAIO_BLOCK_DEVICE=/srv/swift-disk"

  - name: remove line from resetswift
    lineinfile: dest=/home/{{ username }}/bin/resetswift line="sudo find /var/log/swift -type f -exec rm -f {} \;" state=absent

  - name: add new env. variable for running tests
    lineinfile: dest=/home/{{ username }}/.bashrc line="export SWIFT_TEST_CONFIG_FILE=/etc/swift/test.conf"

  - name: make sure PATH includes the bin directory
    lineinfile: dest=/home/{{ username }}/.bashrc line="export PATH=${PATH}:/home/{{ username }}/bin"

  - name: add ST_AUTH swift client environment variables
    lineinfile: dest=/home/{{ username }}/.bashrc line="export ST_AUTH=http://localhost:8080/auth/v1.0"

  - name: add ST_USER swift client environment variables
    lineinfile: dest=/home/{{ username }}/.bashrc line="export ST_USER=test:tester"

  - name: add ST_KEY swift client environment variables
    lineinfile: dest=/home/{{ username }}/.bashrc line="export ST_KEY=testing"

  # the next two tasks should be temporary fixes
  - name: add new env. variable for finding liberasurecode lib
    lineinfile: dest=/home/{{ username }}/.bashrc line="export LD_LIBRARY_PATH=/usr/local/lib"

  - name: add new swift.conf file with correct ec library
    template: src=swift.conf.j2 dest=/etc/swift/swift.conf owner={{ username }} group={{ group }} mode=0644
  # end temp fix here

  - name: remake rings
    command: /home/{{ username }}/bin/remakerings

  - name: remove the current default storage policy
    become_user: swift
    lineinfile: dest=/etc/swift/swift.conf regexp="default = yes" state=absent

  - name: set the correct storage policy
    become_user: swift
    lineinfile: dest=/etc/swift/swift.conf line="default = yes" state=present insertafter="^name = {{default_storage_policy|default(gold)}}"

  - name: add new startmain in case of hummingbird
    template: src=startmain_hummingbird.j2 dest=/home/{{ username }}/bin/startmain owner={{ username }} group={{ group }} mode=0777
    when: configure_hummingbird

  - name: change resetswift to stop hummingbird
    lineinfile: dest=/home/{{ username }}/bin/resetswift line="$GOPATH/src/github.com/openstack/swift/go/bin/hummingbird stop object" state=present insertafter="swift-init all stop"
    when: configure_hummingbird

  - name: reset swift
    become_user: swift
    command: /home/{{ username }}/bin/resetswift
    when: not configure_hummingbird
    failed_when: false

  - name: start swift
    become_user: swift
    command: /home/{{ username }}/bin/startmain
    when: not configure_hummingbird
    failed_when: false

  - name: check swift processes
    shell: ps -e f|grep -c [s]wift-proxy-server

